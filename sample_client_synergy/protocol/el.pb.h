/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_EL_PB_H_INCLUDED
#define PB_EL_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _RsHeader_Status {
    RsHeader_Status_SUCCESS = 0,
    RsHeader_Status_UNSPECIFIED_ERROR = 1,
    RsHeader_Status_BAD_PARTNER_ID_ERROR = 2,
    RsHeader_Status_DECODE_FAILURE_ERROR = 3,
    RsHeader_Status_API_SERVER_ERROR = 4
} RsHeader_Status;
#define _RsHeader_Status_MIN RsHeader_Status_SUCCESS
#define _RsHeader_Status_MAX RsHeader_Status_API_SERVER_ERROR
#define _RsHeader_Status_ARRAYSIZE ((RsHeader_Status)(RsHeader_Status_API_SERVER_ERROR+1))

typedef enum _Rs_Source {
    Rs_Source_UNKNOWN = 0,
    Rs_Source_HYBRID = 1,
    Rs_Source_CELL = 2,
    Rs_Source_WIFI = 3,
    Rs_Source_GNSS = 4
} Rs_Source;
#define _Rs_Source_MIN Rs_Source_UNKNOWN
#define _Rs_Source_MAX Rs_Source_GNSS
#define _Rs_Source_ARRAYSIZE ((Rs_Source)(Rs_Source_GNSS+1))

/* Struct definitions */
typedef struct _Gnss {
    pb_callback_t lat;
    pb_callback_t lon;
    pb_callback_t hpe;
    pb_callback_t alt;
    pb_callback_t vpe;
    pb_callback_t speed;
    pb_callback_t bearing;
    pb_callback_t nsat;
    pb_callback_t age;
/* @@protoc_insertion_point(struct:Gnss) */
} Gnss;


typedef struct _Aps {
    uint32_t connected_idx_plus_1;
    uint32_t common_freq_plus_1;
    uint32_t common_age_plus_1;
    pb_callback_t mac;
    pb_callback_t frequency;
    pb_callback_t neg_rssi;
    pb_callback_t age;
/* @@protoc_insertion_point(struct:Aps) */
} Aps;


typedef struct _CdmaCells {
    uint32_t connected_idx_plus_1;
    uint32_t common_age_plus_1;
    pb_callback_t sid;
    pb_callback_t nid;
    pb_callback_t bsid;
    pb_callback_t neg_rssi;
    pb_callback_t age;
/* @@protoc_insertion_point(struct:CdmaCells) */
} CdmaCells;


typedef PB_BYTES_ARRAY_T(16) CryptoInfo_iv_t;
typedef struct _CryptoInfo {
    CryptoInfo_iv_t iv;
    int32_t aes_padding_length;
/* @@protoc_insertion_point(struct:CryptoInfo) */
} CryptoInfo;


typedef struct _GsmCells {
    uint32_t connected_idx_plus_1;
    uint32_t common_age_plus_1;
    pb_callback_t mcc;
    pb_callback_t mnc;
    pb_callback_t lac;
    pb_callback_t ci;
    pb_callback_t neg_rssi;
    pb_callback_t age;
/* @@protoc_insertion_point(struct:GsmCells) */
} GsmCells;


typedef struct _LteCells {
    uint32_t connected_idx_plus_1;
    uint32_t common_age_plus_1;
    pb_callback_t mcc;
    pb_callback_t mnc;
    pb_callback_t tac;
    pb_callback_t eucid;
    pb_callback_t neg_rssi;
    pb_callback_t age;
/* @@protoc_insertion_point(struct:LteCells) */
} LteCells;


typedef struct _NbiotCells {
    uint32_t connected_idx_plus_1;
    uint32_t common_age_plus_1;
    pb_callback_t mcc;
    pb_callback_t mnc;
    pb_callback_t tac;
    pb_callback_t e_cellid;
    pb_callback_t neg_rssi;
    pb_callback_t age;
/* @@protoc_insertion_point(struct:NbiotCells) */
} NbiotCells;


typedef PB_BYTES_ARRAY_T(16) Rq_device_id_t;
typedef struct _Rq {
    Rq_device_id_t device_id;
    uint64_t timestamp;
    void* aps;
    void* gsm_cells;
    void* umts_cells;
    void* lte_cells;
    void* cdma_cells;
    void* nbiot_cells;
    void* gnss;
/* @@protoc_insertion_point(struct:Rq) */
} Rq;


typedef struct _RqHeader {
    int32_t partner_id;
    int32_t crypto_info_length;
    int32_t rq_length;
/* @@protoc_insertion_point(struct:RqHeader) */
} RqHeader;


typedef struct _Rs {
    double lat;
    double lon;
    uint32_t hpe;
    Rs_Source source;
/* @@protoc_insertion_point(struct:Rs) */
} Rs;


typedef struct _RsHeader {
    int32_t crypto_info_length;
    int32_t rs_length;
    RsHeader_Status status;
/* @@protoc_insertion_point(struct:RsHeader) */
} RsHeader;


typedef struct _UmtsCells {
    uint32_t connected_idx_plus_1;
    uint32_t common_age_plus_1;
    pb_callback_t mcc;
    pb_callback_t mnc;
    pb_callback_t lac;
    pb_callback_t ucid;
    pb_callback_t neg_rssi;
    pb_callback_t age;
/* @@protoc_insertion_point(struct:UmtsCells) */
} UmtsCells;


/* Initializer values for message structs */
#define RqHeader_init_default                    {0, 0, 0}
#define RsHeader_init_default                    {0, 0, _RsHeader_Status_MIN}
#define CryptoInfo_init_default                  {{0, {0}}, 0}
#define Rq_init_default                          {{0, {0}}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Aps_init_default                         {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define GsmCells_init_default                    {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define UmtsCells_init_default                   {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define CdmaCells_init_default                   {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define LteCells_init_default                    {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define NbiotCells_init_default                  {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Gnss_init_default                        {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Rs_init_default                          {0, 0, 0, _Rs_Source_MIN}
#define RqHeader_init_zero                       {0, 0, 0}
#define RsHeader_init_zero                       {0, 0, _RsHeader_Status_MIN}
#define CryptoInfo_init_zero                     {{0, {0}}, 0}
#define Rq_init_zero                             {{0, {0}}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Aps_init_zero                            {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define GsmCells_init_zero                       {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define UmtsCells_init_zero                      {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define CdmaCells_init_zero                      {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define LteCells_init_zero                       {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define NbiotCells_init_zero                     {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Gnss_init_zero                           {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Rs_init_zero                             {0, 0, 0, _Rs_Source_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define Gnss_lat_tag                             1
#define Gnss_lon_tag                             2
#define Gnss_hpe_tag                             3
#define Gnss_alt_tag                             4
#define Gnss_vpe_tag                             5
#define Gnss_speed_tag                           6
#define Gnss_bearing_tag                         7
#define Gnss_nsat_tag                            8
#define Gnss_age_tag                             9
#define Aps_connected_idx_plus_1_tag             1
#define Aps_common_freq_plus_1_tag               2
#define Aps_common_age_plus_1_tag                3
#define Aps_mac_tag                              4
#define Aps_frequency_tag                        5
#define Aps_neg_rssi_tag                         6
#define Aps_age_tag                              7
#define CdmaCells_connected_idx_plus_1_tag       1
#define CdmaCells_common_age_plus_1_tag          2
#define CdmaCells_sid_tag                        3
#define CdmaCells_nid_tag                        4
#define CdmaCells_bsid_tag                       5
#define CdmaCells_neg_rssi_tag                   6
#define CdmaCells_age_tag                        7
#define CryptoInfo_iv_tag                        1
#define CryptoInfo_aes_padding_length_tag        2
#define GsmCells_connected_idx_plus_1_tag        1
#define GsmCells_common_age_plus_1_tag           2
#define GsmCells_mcc_tag                         3
#define GsmCells_mnc_tag                         4
#define GsmCells_lac_tag                         5
#define GsmCells_ci_tag                          6
#define GsmCells_neg_rssi_tag                    7
#define GsmCells_age_tag                         8
#define LteCells_connected_idx_plus_1_tag        1
#define LteCells_common_age_plus_1_tag           2
#define LteCells_mcc_tag                         3
#define LteCells_mnc_tag                         4
#define LteCells_tac_tag                         5
#define LteCells_eucid_tag                       6
#define LteCells_neg_rssi_tag                    7
#define LteCells_age_tag                         8
#define NbiotCells_connected_idx_plus_1_tag      1
#define NbiotCells_common_age_plus_1_tag         2
#define NbiotCells_mcc_tag                       3
#define NbiotCells_mnc_tag                       4
#define NbiotCells_tac_tag                       5
#define NbiotCells_e_cellid_tag                  6
#define NbiotCells_neg_rssi_tag                  7
#define NbiotCells_age_tag                       8
#define Rq_device_id_tag                         1
#define Rq_timestamp_tag                         2
#define Rq_aps_tag                               3
#define Rq_gsm_cells_tag                         4
#define Rq_umts_cells_tag                        5
#define Rq_lte_cells_tag                         6
#define Rq_cdma_cells_tag                        7
#define Rq_nbiot_cells_tag                       8
#define Rq_gnss_tag                              9
#define RqHeader_partner_id_tag                  1
#define RqHeader_crypto_info_length_tag          2
#define RqHeader_rq_length_tag                   3
#define Rs_lat_tag                               1
#define Rs_lon_tag                               2
#define Rs_hpe_tag                               3
#define Rs_source_tag                            4
#define RsHeader_crypto_info_length_tag          1
#define RsHeader_rs_length_tag                   2
#define RsHeader_status_tag                      3
#define UmtsCells_connected_idx_plus_1_tag       1
#define UmtsCells_common_age_plus_1_tag          2
#define UmtsCells_mcc_tag                        3
#define UmtsCells_mnc_tag                        4
#define UmtsCells_lac_tag                        5
#define UmtsCells_ucid_tag                       6
#define UmtsCells_neg_rssi_tag                   7
#define UmtsCells_age_tag                        8

/* Struct field encoding specification for nanopb */
#define RqHeader_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, partner_id, 1) \
X(a, STATIC, SINGULAR, INT32, crypto_info_length, 2) \
X(a, STATIC, SINGULAR, INT32, rq_length, 3)
#define RqHeader_CALLBACK NULL
#define RqHeader_DEFAULT NULL

#define RsHeader_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, crypto_info_length, 1) \
X(a, STATIC, SINGULAR, INT32, rs_length, 2) \
X(a, STATIC, SINGULAR, UENUM, status, 3)
#define RsHeader_CALLBACK NULL
#define RsHeader_DEFAULT NULL

#define CryptoInfo_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, BYTES, iv, 1) \
X(a, STATIC, SINGULAR, INT32, aes_padding_length, 2)
#define CryptoInfo_CALLBACK NULL
#define CryptoInfo_DEFAULT NULL

#define Rq_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, BYTES, device_id, 1) \
X(a, STATIC, SINGULAR, UINT64, timestamp, 2) \
X(a, CALLBACK, SINGULAR, MESSAGE, aps, 3) \
X(a, CALLBACK, SINGULAR, MESSAGE, gsm_cells, 4) \
X(a, CALLBACK, SINGULAR, MESSAGE, umts_cells, 5) \
X(a, CALLBACK, SINGULAR, MESSAGE, lte_cells, 6) \
X(a, CALLBACK, SINGULAR, MESSAGE, cdma_cells, 7) \
X(a, CALLBACK, SINGULAR, MESSAGE, nbiot_cells, 8) \
X(a, CALLBACK, SINGULAR, MESSAGE, gnss, 9)
extern bool Rq_callback(pb_istream_t *istream, pb_ostream_t *ostream, const pb_field_t *field);
#define Rq_CALLBACK Rq_callback
#define Rq_DEFAULT NULL
#define Rq_aps_MSGTYPE Aps
#define Rq_gsm_cells_MSGTYPE GsmCells
#define Rq_umts_cells_MSGTYPE UmtsCells
#define Rq_lte_cells_MSGTYPE LteCells
#define Rq_cdma_cells_MSGTYPE CdmaCells
#define Rq_nbiot_cells_MSGTYPE NbiotCells
#define Rq_gnss_MSGTYPE Gnss

#define Aps_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, connected_idx_plus_1, 1) \
X(a, STATIC, SINGULAR, UINT32, common_freq_plus_1, 2) \
X(a, STATIC, SINGULAR, UINT32, common_age_plus_1, 3) \
X(a, CALLBACK, REPEATED, INT64, mac, 4) \
X(a, CALLBACK, REPEATED, INT32, frequency, 5) \
X(a, CALLBACK, REPEATED, UINT32, neg_rssi, 6) \
X(a, CALLBACK, REPEATED, UINT32, age, 7)
#define Aps_CALLBACK pb_default_field_callback
#define Aps_DEFAULT NULL

#define GsmCells_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, connected_idx_plus_1, 1) \
X(a, STATIC, SINGULAR, UINT32, common_age_plus_1, 2) \
X(a, CALLBACK, REPEATED, UINT32, mcc, 3) \
X(a, CALLBACK, REPEATED, UINT32, mnc, 4) \
X(a, CALLBACK, REPEATED, UINT32, lac, 5) \
X(a, CALLBACK, REPEATED, UINT32, ci, 6) \
X(a, CALLBACK, REPEATED, UINT32, neg_rssi, 7) \
X(a, CALLBACK, REPEATED, UINT32, age, 8)
#define GsmCells_CALLBACK pb_default_field_callback
#define GsmCells_DEFAULT NULL

#define UmtsCells_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, connected_idx_plus_1, 1) \
X(a, STATIC, SINGULAR, UINT32, common_age_plus_1, 2) \
X(a, CALLBACK, REPEATED, UINT32, mcc, 3) \
X(a, CALLBACK, REPEATED, UINT32, mnc, 4) \
X(a, CALLBACK, REPEATED, UINT32, lac, 5) \
X(a, CALLBACK, REPEATED, UINT32, ucid, 6) \
X(a, CALLBACK, REPEATED, UINT32, neg_rssi, 7) \
X(a, CALLBACK, REPEATED, UINT32, age, 8)
#define UmtsCells_CALLBACK pb_default_field_callback
#define UmtsCells_DEFAULT NULL

#define CdmaCells_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, connected_idx_plus_1, 1) \
X(a, STATIC, SINGULAR, UINT32, common_age_plus_1, 2) \
X(a, CALLBACK, REPEATED, UINT32, sid, 3) \
X(a, CALLBACK, REPEATED, UINT32, nid, 4) \
X(a, CALLBACK, REPEATED, UINT32, bsid, 5) \
X(a, CALLBACK, REPEATED, UINT32, neg_rssi, 6) \
X(a, CALLBACK, REPEATED, UINT32, age, 7)
#define CdmaCells_CALLBACK pb_default_field_callback
#define CdmaCells_DEFAULT NULL

#define LteCells_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, connected_idx_plus_1, 1) \
X(a, STATIC, SINGULAR, UINT32, common_age_plus_1, 2) \
X(a, CALLBACK, REPEATED, UINT32, mcc, 3) \
X(a, CALLBACK, REPEATED, UINT32, mnc, 4) \
X(a, CALLBACK, REPEATED, UINT32, tac, 5) \
X(a, CALLBACK, REPEATED, UINT32, eucid, 6) \
X(a, CALLBACK, REPEATED, UINT32, neg_rssi, 7) \
X(a, CALLBACK, REPEATED, UINT32, age, 8)
#define LteCells_CALLBACK pb_default_field_callback
#define LteCells_DEFAULT NULL

#define NbiotCells_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, connected_idx_plus_1, 1) \
X(a, STATIC, SINGULAR, UINT32, common_age_plus_1, 2) \
X(a, CALLBACK, REPEATED, UINT32, mcc, 3) \
X(a, CALLBACK, REPEATED, UINT32, mnc, 4) \
X(a, CALLBACK, REPEATED, UINT32, tac, 5) \
X(a, CALLBACK, REPEATED, UINT32, e_cellid, 6) \
X(a, CALLBACK, REPEATED, UINT32, neg_rssi, 7) \
X(a, CALLBACK, REPEATED, UINT32, age, 8)
#define NbiotCells_CALLBACK pb_default_field_callback
#define NbiotCells_DEFAULT NULL

#define Gnss_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, INT32, lat, 1) \
X(a, CALLBACK, REPEATED, INT32, lon, 2) \
X(a, CALLBACK, REPEATED, UINT32, hpe, 3) \
X(a, CALLBACK, REPEATED, INT32, alt, 4) \
X(a, CALLBACK, REPEATED, UINT32, vpe, 5) \
X(a, CALLBACK, REPEATED, UINT32, speed, 6) \
X(a, CALLBACK, REPEATED, UINT32, bearing, 7) \
X(a, CALLBACK, REPEATED, UINT32, nsat, 8) \
X(a, CALLBACK, REPEATED, UINT32, age, 9)
#define Gnss_CALLBACK pb_default_field_callback
#define Gnss_DEFAULT NULL

#define Rs_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, DOUBLE, lat, 1) \
X(a, STATIC, SINGULAR, DOUBLE, lon, 2) \
X(a, STATIC, SINGULAR, UINT32, hpe, 3) \
X(a, STATIC, SINGULAR, UENUM, source, 4)
#define Rs_CALLBACK NULL
#define Rs_DEFAULT NULL

extern const pb_msgdesc_t RqHeader_msg;
extern const pb_msgdesc_t RsHeader_msg;
extern const pb_msgdesc_t CryptoInfo_msg;
extern const pb_msgdesc_t Rq_msg;
extern const pb_msgdesc_t Aps_msg;
extern const pb_msgdesc_t GsmCells_msg;
extern const pb_msgdesc_t UmtsCells_msg;
extern const pb_msgdesc_t CdmaCells_msg;
extern const pb_msgdesc_t LteCells_msg;
extern const pb_msgdesc_t NbiotCells_msg;
extern const pb_msgdesc_t Gnss_msg;
extern const pb_msgdesc_t Rs_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RqHeader_fields &RqHeader_msg
#define RsHeader_fields &RsHeader_msg
#define CryptoInfo_fields &CryptoInfo_msg
#define Rq_fields &Rq_msg
#define Aps_fields &Aps_msg
#define GsmCells_fields &GsmCells_msg
#define UmtsCells_fields &UmtsCells_msg
#define CdmaCells_fields &CdmaCells_msg
#define LteCells_fields &LteCells_msg
#define NbiotCells_fields &NbiotCells_msg
#define Gnss_fields &Gnss_msg
#define Rs_fields &Rs_msg

/* Maximum encoded size of messages (where known) */
#define RqHeader_size                            33
#define RsHeader_size                            24
#define CryptoInfo_size                          29
/* Rq_size depends on runtime parameters */
/* Aps_size depends on runtime parameters */
/* GsmCells_size depends on runtime parameters */
/* UmtsCells_size depends on runtime parameters */
/* CdmaCells_size depends on runtime parameters */
/* LteCells_size depends on runtime parameters */
/* NbiotCells_size depends on runtime parameters */
/* Gnss_size depends on runtime parameters */
#define Rs_size                                  26

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
